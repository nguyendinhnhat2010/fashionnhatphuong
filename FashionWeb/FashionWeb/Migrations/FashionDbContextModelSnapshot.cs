// <auto-generated />
using System;
using FashionWeb.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FashionWeb.Migrations
{
    [DbContext(typeof(FashionDbContext))]
    partial class FashionDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FashionWeb.FashionEntities.Cart", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CartId");

                    b.HasIndex("ProductId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("FashionWeb.FashionEntities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PhoneNumber")
                        .HasMaxLength(200)
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("FashionWeb.FashionEntities.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Phone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("Ship")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("OrderId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FashionWeb.FashionEntities.OrderDetail", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("FashionWeb.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Áo Thun",
                            Status = 1
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Áo Sơ Mi",
                            Status = 1
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Quần Short",
                            Status = 1
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Quần Jean",
                            Status = 1
                        });
                });

            modelBuilder.Entity("FashionWeb.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Chất vải cotton dày dặn co giãn và có độ thoáng khí tốt.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Thun ICON DENIM Boss Acid Wash",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Áo thun basic được làm từ chất vải 100% organic cotton dày dặn.",
                            OriginalPrice = 0m,
                            Price = 180.000m,
                            ProductName = "Áo Thun BOUTON Basic",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Nổi bật với chi tiết đánh bông đường may và cuốn biên ở phần tay, cổ và lai áo.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Nỉ Tay Dài ICON DENIM W Details",
                            Size = 2,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Áo thun basic được làm từ chất vải 100% organic cotton dày dặn.",
                            OriginalPrice = 0m,
                            Price = 280.000m,
                            ProductName = "Áo Thun ICON DENIM Printed",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Áo thun basic được làm từ chất vải 100% organic cotton dày dặn.",
                            OriginalPrice = 0m,
                            Price = 280.000m,
                            ProductName = "Áo Thun ICON DENIM Graphic",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Dòng áo thun đơn giản nhưng vẫn có chất riêng, sở hữu gam màu dễ mặc.",
                            OriginalPrice = 0m,
                            Price = 280.000m,
                            ProductName = "Áo Thun BOUTON Paint Splash Effect",
                            Size = 2,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Áo thun basic được làm từ chất vải 100% organic cotton dày dặn.",
                            OriginalPrice = 250.000m,
                            Price = 360.000m,
                            ProductName = "Áo Thun BOUTON x GOKU Wash",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Dòng áo thun đơn giản nhưng vẫn có chất riêng, sở hữu gam màu dễ mặc.",
                            OriginalPrice = 0m,
                            Price = 280.000m,
                            ProductName = "Áo Thun BOUTON City Print",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "BOUTON Angel Soiree Shirt // Phiên bản “Áo sơmi ngắn tay” IN FULL phát hành đặc biệt cho mùa đông 2021.",
                            OriginalPrice = 0m,
                            Price = 330.000m,
                            ProductName = "Áo Sơmi BOUTON Angel Printed (TN)",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "Với chất vải cotton được chải mịn, đem lại cảm giác mềm mại, mặc rất thoải mái.",
                            OriginalPrice = 0m,
                            Price = 350.000m,
                            ProductName = "Áo Sơmi BOUTON Flanel Caro ss21",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 11,
                            Description = "BOUTON Angel Soiree Shirt // Phiên bản “Áo sơmi ngắn tay” IN FULL phát hành đặc biệt cho mùa đông 2021.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Sơmi Thun Bóng Chày BOUTON Printed",
                            Size = 2,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 12,
                            Description = "BOUTON Angel Soiree Shirt // Phiên bản “Áo sơmi ngắn tay” IN FULL phát hành đặc biệt cho mùa đông 2021.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Sơmi Tay Ngắn BOUTON Thêu Chữ Ký",
                            Size = 2,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 13,
                            Description = "BOUTON Angel Soiree Shirt // Phiên bản “Áo sơmi ngắn tay” IN FULL phát hành đặc biệt cho mùa đông 2021.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Sơmi BOUTON Moutain Printed Relaxed",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 14,
                            Description = "BOUTON Suede Shirts // Dòng sơmi không thể bỏ qua Thu Đông này.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Sơmi Oxford BOUTON Basic",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 15,
                            Description = "Với chất vải cotton được chải mịn, đem lại cảm giác mềm mại, mặc rất thoải mái.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Sơmi Cổ Trụ NOMOUS ESSENTIALS Linen",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 16,
                            Description = "BOUTON Suede Shirts // Dòng sơmi không thể bỏ qua Thu Đông này.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Áo Sơmi BOUTON Suede Leather",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 17,
                            Description = "Form dáng skinny ôm chân, tôn dáng cùng chất vải denim dày dặn có độ co giãn tốt.",
                            OriginalPrice = 30.000m,
                            Price = 500.000m,
                            ProductName = "Quần Jeans BOUTON Dark Blue Skinny",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 18,
                            Description = "Sở hữu chất vải denim dày dặn, có độ co giãn nên rất thoải mái và dễ chịu khi mặc.",
                            OriginalPrice = 0m,
                            Price = 500.000m,
                            ProductName = "Quần Jeans BOUTON Rách Lai Skinny",
                            Size = 1,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 19,
                            Description = "Form dáng skinny ôm chân, tôn dáng cùng chất vải denim dày dặn có độ co giãn tốt.",
                            OriginalPrice = 0m,
                            Price = 500.000m,
                            ProductName = "Quần Jeans BOUTON Black Slim",
                            Size = 2,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 20,
                            Description = "Sở hữu chất vải denim dày dặn, có độ co giãn nên rất thoải mái và dễ chịu khi mặc.",
                            OriginalPrice = 0m,
                            Price = 500.000m,
                            ProductName = "Quần Jeans BOUTON Baggy",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 21,
                            Description = "Form dáng skinny ôm chân, tôn dáng cùng chất vải denim dày dặn có độ co giãn tốt.",
                            OriginalPrice = 0m,
                            Price = 380.000m,
                            ProductName = "Quần Denim BOUTON Slim Fit ss21",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 22,
                            Description = "Sở hữu sắc đen đơn giản nhưng dễ phối cùng các items khác tạo nên outfit theo nhiều phong cách đa dạng và cuốn hút.",
                            OriginalPrice = 0m,
                            Price = 400.000m,
                            ProductName = "Quần Jeans BOUTON Black w Chain Skinny",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 23,
                            Description = "Form dáng skinny ôm chân, tôn dáng cùng chất vải denim dày dặn có độ co giãn tốt.",
                            OriginalPrice = 0m,
                            Price = 500.000m,
                            ProductName = "Quần jeans NOMOUS ESSENTIALS light bule",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 24,
                            Description = "Form dáng skinny ôm chân, tôn dáng cùng chất vải denim dày dặn có độ co giãn tốt.",
                            OriginalPrice = 0m,
                            Price = 500.000m,
                            ProductName = "Quần jeans MASCUS Indigo slim",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 25,
                            Description = "BOUTON Kaki Shorts // Ae yêu thích phong cách tối giản thì không thể bỏ qua dòng quần shorts kaki này.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Quần Short Kaki BOUTON",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 26,
                            Description = "Form dáng trẻ trung, đường may tỉ mỉ với các họa tiết caro nhỏ, quần chính là “MUST-HAVE-ITEM” của ae.",
                            OriginalPrice = 0m,
                            Price = 350.000m,
                            ProductName = "Quần Short Jeans BOUTON Vảy Sơn",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 27,
                            Description = "BOUTON Kaki Shorts // Ae yêu thích phong cách tối giản thì không thể bỏ qua dòng quần shorts kaki này.",
                            OriginalPrice = 0m,
                            Price = 280.000m,
                            ProductName = "Quần Short BOUTON Pique Camo",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 28,
                            Description = "Form dáng trẻ trung, đường may tỉ mỉ với các họa tiết caro nhỏ, quần chính là “MUST-HAVE-ITEM” của ae.",
                            OriginalPrice = 0m,
                            Price = 300.000m,
                            ProductName = "Quần Short Thun Umi BOUTON Slim Fit",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 29,
                            Description = "Đặc biệt, dòng này được đựng trong túi vải gọn nhẹ và tiện lợi ae dễ dàng mang theo đi bất cứ đâu.",
                            OriginalPrice = 0m,
                            Price = 200.000m,
                            ProductName = "Quần Short Biển BOUTON Printed",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 30,
                            Description = "Form dáng trẻ trung, đường may tỉ mỉ với các họa tiết caro nhỏ, quần chính là “MUST-HAVE-ITEM” của ae.",
                            OriginalPrice = 0m,
                            Price = 320.000m,
                            ProductName = "Quần Short BOUTON Acid wash",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 31,
                            Description = "Đặc biệt, dòng này được đựng trong túi vải gọn nhẹ và tiện lợi ae dễ dàng mang theo đi bất cứ đâu.",
                            OriginalPrice = 0m,
                            Price = 200.000m,
                            ProductName = "Quần Short Biển C0TT0N.0N",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        },
                        new
                        {
                            ProductId = 32,
                            Description = "BOUTON Kaki Shorts // Ae yêu thích phong cách tối giản thì không thể bỏ qua dòng quần shorts kaki này.",
                            OriginalPrice = 0m,
                            Price = 280.000m,
                            ProductName = "Quần Short BOUTON Velvet Basic",
                            Size = 0,
                            Stock = 0,
                            ViewCount = 0
                        });
                });

            modelBuilder.Entity("FashionWeb.Models.ProductInCategory", b =>
                {
                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductInCategories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 2
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 3
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 4
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 5
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 6
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 7
                        },
                        new
                        {
                            CategoryId = 1,
                            ProductId = 8
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 9
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 10
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 11
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 12
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 13
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 14
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 15
                        },
                        new
                        {
                            CategoryId = 2,
                            ProductId = 16
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 17
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 18
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 19
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 20
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 21
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 22
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 23
                        },
                        new
                        {
                            CategoryId = 4,
                            ProductId = 24
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 25
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 26
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 27
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 28
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 29
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 30
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 31
                        },
                        new
                        {
                            CategoryId = 3,
                            ProductId = 32
                        });
                });

            modelBuilder.Entity("FashionWeb.FashionEntities.Cart", b =>
                {
                    b.HasOne("FashionWeb.Models.Product", "Product")
                        .WithMany("Carts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FashionWeb.FashionEntities.OrderDetail", b =>
                {
                    b.HasOne("FashionWeb.FashionEntities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionWeb.Models.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FashionWeb.Models.ProductInCategory", b =>
                {
                    b.HasOne("FashionWeb.Models.Category", "Category")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FashionWeb.Models.Product", "Product")
                        .WithMany("ProductInCategories")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FashionWeb.FashionEntities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("FashionWeb.Models.Category", b =>
                {
                    b.Navigation("ProductInCategories");
                });

            modelBuilder.Entity("FashionWeb.Models.Product", b =>
                {
                    b.Navigation("Carts");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductInCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
